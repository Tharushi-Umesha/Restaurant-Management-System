<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>